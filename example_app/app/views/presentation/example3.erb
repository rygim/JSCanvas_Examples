    <% content_for :head do %>
  <script type="text/javascript">       
          bindPresentationActions("<%= url_for(:action => 'canvasIntro') %>", 
          [], 
          "<%= url_for(:action => 'canvasApi1') %>");
  </script>
  <script type="text/javascript" src="http://localhost:7777/socket.io/socket.io.js"></script>
  <script type="text/javascript">
    $(document).ready(function(){
      var upcomingMessages = [];
      var upcomingDrawData = [];
      
      var drawData = function(author, draw){
         return {
           author: author,
           draw: draw
         };
      };
      
      var handleChat = function(author, message){
        var msg = author + ": " + message;
        upcomingMessages.push(msg);
      };
      
      var handleDraw = function(author, draw){
        upcomingDrawData.push(drawData(author, draw));
      };
      
      var socket = io.connect('http://localhost:7777');
      
      $(document).keypress(function(event){
        var chat = $("#chat-input").val();
        if (event.which == 13 && chat !== ""){
          $("#chat-input").val("");
          socket.emit('chat', { chat: chat, author: "rgimmy" });
        }
      });
      
      socket.on('init', function (data) { 
        for(var i = 0; i < data.chats.messages.length; i++){
          handleChat(data.chats.messages[i].author, data.chats.messages[i].message);
        }
        
        for(var i = 0; i < data.drawData.message.length; i++){
          handleDraw(data.drawData.messages[i].author, data.drawData.messages[i].draw);
        }
      });
      
      socket.on('new chat', function (data){
        handleChat(data.author, data.message); 
      });
      
      socket.on('new draw', function (data){
        handleDraw(data.author, data.draw);
      });
      
      var profiler = fpsProfiler();
      
      var update = function(){
        
      };
      
      var draw = function(){
        var ctx = $("#canvas-app")[0].getContext("2d");
        profiler.defaultDraw(ctx);
        
        ctx.fillText(msg, 20 , 20 * upcomingMessages.length);
      };
      
      var render = function(){
        profiler.beginUpdate();
        update();
        profiler.endUpdate();
        profiler.beginDraw();
        draw();
        profiler.endDraw();
        
        requestAnimationFrame(render);
      };
      
      profiler.start();
      render();
    });
    
  </script>
<% end %>

<% content_for :title do %>  
  Networking Application
<% end %>
  
  
<canvas id="canvas-app" width="400" height="400"></canvas>

  <label for="chat-input">Chat: </label><input type="text" id="chat-input" />

    
    
   