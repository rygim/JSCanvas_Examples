    <% content_for :head do %>
  <script type="text/javascript">       
          bindPresentationActions("<%= url_for(:action => 'canvasIntro') %>", 
          [], 
          "<%= url_for(:action => 'canvasApi1') %>");
  </script>
  <script type="text/javascript" src="http://localhost:7777/socket.io/socket.io.js"></script>
    <script type="text/javascript">
    $(document).ready(function(){
      var upcomingMessages = [];
      var upcomingDrawData = [];
      
      var drawData = function(author, draw){
         return {
           author: author,
           draw: draw
         };
      };
      
      var handleChat = function(author, message){
        var msg = author + ": " + message;
        upcomingMessages.unshift(msg);
        if (upcomingMessages.length > 10){
          upcomingMessages.pop();
        }
      };
      
      var handleDraw = function(author, draw){
        upcomingDrawData.push(drawData(author, draw));
      };
      
      var socket = io.connect('http://localhost:7777');
      
      $(document).keypress(function(event){
        var chat = $("#chat-input").val();
        var author = $("#handle-input").val();
        if (event.which == 13 && chat !== ""){
          $("#chat-input").val("");
          socket.emit('chat', { chat: chat, author: author });
        }
      });
      
      socket.on('init', function (data) { 
        for(var i = 0; i < data.chats.messages.length; i++){
          handleChat(data.chats.messages[i].author, data.chats.messages[i].message);
        }
        
        for(var i = 0; i < data.drawData.messages.length; i++){
          handleDraw(data.drawData.messages[i].author, data.drawData.messages[i].draw);
        }
      });
      
      socket.on('new chat', function (data){
        handleChat(data.author, data.message); 
      });
      
      socket.on('new draw', function (data){
        handleDraw(data.author, data.draw);
      });
      
      var profiler = fpsProfiler();
      
      var ctx = $("#canvas-app")[0].getContext("2d");
      
      var update = function(){
        
      };
      
      var draw = function(){
        ctx.fillStyle = 'black';
        ctx.fillRect(0,0,ctx.canvas.width, ctx.canvas.height);
        ////profiler.defaultDraw(ctx);
        ctx.fillStyle = 'white';
        for(var i = 0; i < upcomingMessages.length; i++){
          ctx.fillText(upcomingMessages[i], 20 , 20 * i + 30);
        }
      };
      
      var render = function(){
        profiler.beginUpdate();
        update();
        profiler.endUpdate();
        profiler.beginDraw();
        draw();
        profiler.endDraw();
        
        requestAnimationFrame(render);
      };
      
      profiler.start();
      render();
    });
    
  </script>
<% end %>

<% content_for :title do %>  
  Networking Application
<% end %>
  
  
<canvas id="canvas-app" width="800" height="400"></canvas>
<br />
<label for="chat-input">Chat: </label><input type="text" id="chat-input" />
<label for="handle-input">Handle: </label><input type="text" value="rgimmy" id="handle-input" />
    
    
   